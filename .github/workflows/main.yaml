name: Deploy on AWS

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
          
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_LOGIN_URI }}

      - name: Build and push Docker images
        run: |
          docker build -t frontend:latest -f web-app/frontend/Dockerfile.frontend .
          docker build -t backend:latest -f web-app/backend/Dockerfile.backend .
          docker tag frontend:latest ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}
          docker tag backend:latest ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}
          
          # docker build -t ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}/frontend:latest -f web-app/frontend/Dockerfile.frontend .
          # docker build -t ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}/backend:latest -f web-app/backend/Dockerfile.backend .
  
          docker push ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}

  deploy-aws:
    name: Continuous Deployment
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_LOGIN_URI }}
        
      - name: Pull the latest images
        run: |
         docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/frontend:latest
         docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/backend:latest

      - name: Docker Composing
        run: |
          # Create a Docker Compose file and deploy
          echo '
          version: "3"
          services:
            frontend:
              image: ${{ secrets.AWS_ECR_LOGIN_URI }}/frontend:latest
              ports:
                - "5000:5000"
              depends_on:
                - backend
          
            backend:
              image: ${{ secrets.AWS_ECR_LOGIN_URI }}/backend:latest
              ports:
                - "8000:8000"
          ' > docker-compose.yml

          docker-compose up -d
